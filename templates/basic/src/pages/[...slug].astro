---
import type { CollectionEntry } from "astro:content";
import RelatedLabs from "~/components/RelatedLabs.astro";
import RelatedSubjects from "~/components/RelatedSubjects.astro";
import { allPages } from "~/content";
import BaseLayout from "~/layouts/BaseLayout.astro";

export const getStaticPaths = async () => {
  return allPages
    .map((page) => {
      const slugParts = page.slug.split("/").map((value) => {
        const [idText, ...textArray] = value.split("-");
        if (Number.isNaN(Number(idText))) return;

        return textArray.join("-");
      });
      if (slugParts.some((value) => value == undefined)) return;

      const slug = `${slugParts.join("/")}`;
      return { params: { slug }, props: page };
    })
    .filter((value) => value != undefined);
};

export type Props = CollectionEntry<"docs">;
const { data, render, body } = Astro.props;
const { Content } = await render();
---

<BaseLayout data={data}>
  <>
    <Content />
    {
      data.type === "class" && (
        <>
          <RelatedLabs relatedLabs={data.relatedLabs} />
          <RelatedSubjects relatedSubjects={data.relatedSubjects} />
        </>
      )
    }
  </>
</BaseLayout>
